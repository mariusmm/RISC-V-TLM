TARGET   = dhrystone.cve2

TARGET_ARCH = riscv32

CC       =  /opt/riscv32/bin/riscv32-unknown-elf-gcc

# compiling flags here
CFLAGS = -Wall -I. -O0 -static -march=rv32imc -mabi=ilp32 -mcmodel=medany -Wall -fvisibility=hidden --specs=nosys.specs -ggdb -DCVE2

LINKER   = /opt/riscv32/bin/riscv32-unknown-elf-gcc
# linking flags here
LDFLAGS   = -I. -static -g -T../link_cve2.ld
LIBS   = $(EXTRA_LIBS)


# change these to proper directories where each file should be
SRCDIR   = ./
OBJDIR   = .
BINDIR   = ./
INCDIR = -I.
LIBDIR = -L.


SOURCES  := $(wildcard $(SRCDIR)/*.c)
INCLUDES := $(wildcard $(INCDIR)/*.h)
OBJECTS  := $(SOURCES:$(SRCDIR)/%.c=$(OBJDIR)/%.o)

rm       = rm -f


$(BINDIR)/$(TARGET): $(OBJECTS)
	$(LINKER) $(CFLAGS) $(LDFLAGS) $(LIBS) $(LIBDIR) $(OBJECTS) -o $@
	/opt/riscv32/bin/riscv32-unknown-elf-objdump -d $@ > $(TARGET).dump
	/opt/riscv32/bin/riscv32-unknown-elf-objcopy -Oihex $@ $(TARGET).hex
	@echo "Linking complete!"

$(OBJECTS): $(OBJDIR)/%.o : $(SRCDIR)/%.c
	@echo "Compiling "$<" ..."
	$(CC) $(CFLAGS) $(INCDIR) -c $< -o $@
	@echo "Done!"

.PHONY: clean
clean:
	@$(rm) $(OBJECTS) $(TARGET) $(TARGET).hex $(TARGET).dump
	@echo "Cleanup complete!"

.PHONY: remove
remove: clean
	@$(rm) $(BINDIR)/$(TARGET)
	@echo "Executable removed!"

all: $(BINDIR)/$(TARGET)
